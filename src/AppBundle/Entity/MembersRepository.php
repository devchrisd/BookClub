<?php

namespace AppBundle\Entity;

use Doctrine\ORM\EntityRepository;

/**
 * MembersRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class MembersRepository extends EntityRepository
{

    const CLASS_NAME = __CLASS__;
    const TABLE_NAME = 'members';
    const ALIAS = 'member';

    /**
     * @param string $keyword
     * @param int $first
     * @param int $max
     *
     * @return Member[]
     */
    public function search($keyword, $first = 0, $max = null)
    {
        $query = $this->getEntityManager()->createQuery(
                'SELECT m
                FROM AppBundle:Members m
                WHERE m.username LIKE :username_exp'
            )->setParameter('username_exp', '%' . $keyword . '%');

        return $query->getResult();
    }

    /**
     * @param string $keyword
     *
     * @return int
     */
    public function getSearchCount($keyword)
    {
        $query = $this->getEntityManager()->createQuery(
                'SELECT count(m)
                FROM AppBundle:Members m
                WHERE m.username LIKE :username_exp'
            )->setParameter('username_exp', '%' . $keyword . '%');

        return $total = $query->getSingleScalarResult();
    }

    /**
     * @param array $row
     *
     * @return Member
     */
    protected function hydrate(array $row)
    {
        return new Member(
            $row['username'],
            $row['password'],
            new Address($row['country'], $row['province'], $row['city'], $row['postal_code']),
            new \DateTime($row['date_of_birth']),
            $row['category'],
            new Height($row['height']),
            new Weight($row['weight']),
            $row['body_type'],
            $row['ethnicity'],
            new Email($row['email'])
        );
    }

    /**
     * @param Member $member
     *
     * @return array
     */
    private function extractData($member)
    {
        return [
            'username'      => $member->getUsername(),
            'password'      => $member->getPassword(),
            'country'       => $member->getAddress()->getCountry(),
            'province'      => $member->getAddress()->getProvince(),
            'city'          => $member->getAddress()->getCity(),
            'postal_code'   => $member->getAddress()->getPostalCode(),
            'date_of_birth' => $member->getDateOfBirth()->format('Y-m-d H:i:s'),
            'category'      => $member->getCategory(),
            'height'        => $member->getHeight(),
            'weight'        => $member->getWeight(),
            'body_type'     => $member->getBodyType(),
            'ethnicity'     => $member->getEthnicity(),
            'email'         => $member->getEmail(),
        ];
    }

    /**
     * @return array
     */
    private function getDataTypes()
    {
        return [
            Type::STRING,
            Type::STRING,
            Type::STRING,
            Type::STRING,
            Type::STRING,
            Type::STRING,
            Type::DATE,
            Type::STRING,
            Type::STRING,
            Type::STRING,
            Type::STRING,
            Type::STRING,
            Type::STRING,
        ];
    }

    /**
     * @return string
     */
    protected function getTableName()
    {
        return self::TABLE_NAME;
    }

    /**
     * @return string
     */
    protected function getAlias()
    {
        return self::ALIAS;
    }
}
